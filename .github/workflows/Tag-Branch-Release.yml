name: Release

on:
  release:
    types:
      - published
jobs:
  Build: 
    runs-on: ubuntu-latest
    outputs:
      targetBranch: ${{ steps.get-release-branch.outputs.targetBranch }}
      defaultBranch: ${{ steps.get-release-branch.outputs.defaultBranch }}
    steps:
      - uses: actions/checkout@v3

      - name: Check target branch of release
        id: get-release-branch
        if: github.event_name == 'release'
        run: |
          targetBranch=$(gh release view $tag --json targetCommitish -q .[])
          defaultBranch=$(gh repo view --json defaultBranchRef -q .[].name)
          echo "targetBranch=$targetBranch" >> "$GITHUB_OUTPUT"
          echo "defaultBranch=$defaultBranch" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Build
        run: |
          # Build Commands
          Write-Host "Building app..."

  Deploy-To-Staging:
    runs-on: ubuntu-latest
    needs: [Build]
    environment:
      name: Staging
    steps:
      - name: Get Event
        run: cat $GITHUB_EVENT_PATH

  Deploy-To-Production:
    runs-on: ubuntu-latest
    needs: [Build, Deploy-To-Staging]
    if: needs.Build.outputs.targetBranch == needs.Build.outputs.defaultBranch
    environment:
      name: Production
    steps:
      - name: Get Event
        run: cat $GITHUB_EVENT_PATH
